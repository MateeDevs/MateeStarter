[versions]
sdk-min = "23"
sdk-target = "34"
sdk-compile = "35"
java = "21"
kotlin = "2.2.10"
gradlePlugin = "8.11.1"
coroutines = "1.10.2"
dateTime = "0.6.0"
atomicFu = "0.23.2"
koin = "4.1.1"
androidXCore = "1.13.1"
androidXNavigation = "2.9.0-rc01"
material = "1.13.0"
material-icons = "1.7.3"
lifecycle = "2.9.3"
paging = "3.3.6"
composeBom = "2025.08.01"
jetbrains-composePlugin = "1.9.0"
activity = "1.10.1"
navigation = "2.9.3"
accompanist = "0.36.0"
ktor = "3.2.3"
kermit = "2.0.8"
settings = "1.3.0"
googlePlayServices = "21.3.0"
ktLint = "11.6.0"
ktLint-rules = "0.3.8"
kotlinxImmutableCollections = "0.4.0"
konsist = "0.13.0"
junit = "4.13.2"
mokoResources = "0.25.0"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
appcompat = "1.7.1"
versionCatalogueUpdate = "0.8.1"
versions = "0.49.0"
desugar = "2.1.2"
uiautomator = "2.3.0"
skie = "0.10.6"
firebase = "22.5.0"
googleServices = "4.4.3"
coil = "3.3.0"
haze = "1.6.10"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-gradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinx-immutableCollections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinxImmutableCollections" }
# Tools
androidTools-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradlePlugin" }
androidTools-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }
# Coroutines
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
# Date time
dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }
# AtomicFu
atomicFu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicFu" }
# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
# Can be removed in case you do not use compose multiplatform
koin-core-viewModel = { module = "io.insert-koin:koin-core-viewmodel", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
# Can be removed in case you do not use compose multiplatform
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin" }
# Can be removed in case you do not use compose multiplatform
koin-compose-viewModel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
# AndroidX
androidX-core = { module = "androidx.core:core-ktx", version.ref = "androidXCore" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
androidX-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidXNavigation" }
# Material
material = { module = "com.google.android.material:material", version.ref = "material" }
# Lifecycle
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-common = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }
lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
lifecycle-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
# Paging
paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging" }
# Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-uiTooling = { module = "androidx.compose.ui:ui-tooling" }
compose-foundation = { module = "androidx.compose.foundation:foundation" }
compose-material = { module = "androidx.compose.material:material" }
compose-uiTest = { module = "androidx.compose.ui:ui-test-junit4" }
compose-materialIconsCore = { module = "org.jetbrains.compose.material:material-icons-core", version.ref = "material-icons" }
# Activity
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity" }
# Navigation
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation" }
# Accompanist
accompanist-navigationMaterial = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
# Coil
coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }
coil-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }
# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
# Kermit
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
# Settings
settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings" }
settings-noArg = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "settings" }
settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "settings" }
# Google Play Services
googlePlayServices-location = { module = "com.google.android.gms:play-services-location", version.ref = "googlePlayServices" }
# KtLint rules
ktlint-composeRules = { module = "io.nlopez.compose.rules:ktlint", version.ref = "ktLint-rules" }
# Moko resources
mokoResources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
mokoResources-compose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources" }
# Konsist architecture linter
konsist = { module = "com.lemonappdev:konsist", version.ref = "konsist" }
# Tests
junit = { module = "junit:junit", version.ref = "junit" }
ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
androidx-uiautomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiautomator" }
# Skie
skie-annotations = { module = "co.touchlab.skie:configuration-annotations", version.ref = "skie" }
# Firebase
firebase-analytics = { module = "com.google.firebase:firebase-analytics-ktx", version.ref = "firebase" }
# Haze
haze = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
haze-materials = { module = "dev.chrisbanes.haze:haze-materials", version.ref = "haze" }

[bundles]
settings = [
    "settings",
    "settings-coroutines",
    "settings-noArg",
]
ktor-common = [
    "ktor-contentNegotiation",
    "ktor-core",
    "ktor-logging",
    "ktor-serialization",
]
paging = [
    "paging-compose",
    "paging-runtime",
]

[plugins]
android-application = { id = "com.android.application", version.ref = "gradlePlugin" }
android-library = { id = "com.android.library", version.ref = "gradlePlugin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
versionCatalogUpdate = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogueUpdate" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versions" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktLint" }
mokoResources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "jetbrains-composePlugin" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }
google-services = { id = "com.google.gms.google-services", version.ref = "googleServices" }
# Can be removed in case you do not use compose multiplatform
jetbrains-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
# Convention plugins
mateeStarter-android-application-compose = "android-application-compose:none"
mateeStarter-android-application-core = "android-application:none"
mateeStarter-android-library-compose = "android-library-compose:none"
mateeStarter-android-library-core = "android-library:none"
mateeStarter-kmm-library = "kmm-library:none"
mateeStarter-kmm-xcframework-library = "kmm-xcframework-library:none"
